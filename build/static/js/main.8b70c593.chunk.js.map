{"version":3,"sources":["services/yoga-api.js","services/user-api.js","components/ClassListItem/ClassListItem.jsx","components/ClassListPage/ClassListPage.jsx","components/AddClassPage/AddClassPage.jsx","components/ClassCard/ClassCard.jsx","components/ClassDetailPage/ClassDetailPage.jsx","components/EditClassPage/EditClassPage.jsx","utils/tokenService.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/MyProfilePage/MyProfilePage.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","deleteOne","id","fetch","method","then","res","json","bookClass","user","headers","body","JSON","stringify","classID","showSelectedClasses","console","log","moment","require","ClassListItem","props","className","yogaClass","dateTime","format","title","instructor","isAdmin","to","pathname","state","handleBookClass","handleShowProfile","handleSignupOrLogin","onClick","handleDeleteClass","_id","ClassListPage","src","yogaClasses","map","key","AddClassPage","invalidForm","formData","name","breed","age","formRef","React","createRef","handleSubmit","e","preventDefault","handleAddClass","handleChange","target","value","setState","current","checkValidity","ref","this","autoComplete","onSubmit","onChange","required","description","yogaClassSize","price","type","disabled","Component","ClassCard","signups","includes","ClassDetailPage","location","EditClassPage","handleUpdateClass","getToken","token","localStorage","getItem","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","signup","tokenService","ok","getUser","logout","login","creds","Headers","Error","SignupForm","email","password","passwordConf","updateMessage","a","userService","history","push","message","placeholder","isFormInvalid","SignupPage","msg","LoginPage","pw","alert","MyProfilePage","App","newYogaClassData","newYogaClass","updatedYogaClassData","updatedClass","newYogaClassesArray","p","handleLogout","yogaClassAPI","filter","userAPI","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8b70c593.chunk.js","sourcesContent":["const BASE_URL = '/api/yogaClasses';//needs to match the path of the first arg in app.use in server.js\n\nexport function getAll() {\n  return fetch(BASE_URL)\n  .then(res => res.json());\n}\n\nexport function create(yogaClass) {\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {'content-type': 'application/json'},\n    body: JSON.stringify(yogaClass)\n  }).then(res => res.json()); \n}\n\nexport function update(yogaClass) {\n  return fetch(`${BASE_URL}/${yogaClass._id}`, {\n    method: 'PUT',\n    headers: {'content-type': 'application/json'},\n    body: JSON.stringify(yogaClass)\n  }).then(res => res.json());\n}\n\nexport function deleteOne(id) {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE'\n  }).then(res => res.json());\n}","const BASE_URL = '/api/users';//needs to match the path of the first arg in app.use in server.js\n\nexport function bookClass(user, id) {\n  if(user) {\n    return fetch(BASE_URL, {\n      method: 'POST',\n      headers: {'content-type': 'application/json'},\n      body: JSON.stringify({user, classID: id})\n    }).then(res => res.json());\n  } \n}\n\nexport function showSelectedClasses(user, id) {\n  if(user) {\n    console.log(\"showSelectedClasses\");\n    return fetch(BASE_URL, {\n      method: 'GET',\n      headers: {'content-type': 'application/json'},\n      body: JSON.stringify({user, classID: id})\n    }).then(res => res.json());\n    /*return fetch(BASE_URL)\n    .then(res => res.json());*/\n  }\n}\n\n","import React from 'react';\n// eslint-disable-next-line\nimport {Link} from 'react-router-dom';\nimport './ClassListItem.css';\nvar moment = require('moment');\n\nfunction ClassListItem(props) {\n  return (\n    <div className='panel panel-default'>\n      <div className=\"panel-heading\">\n        <h3 className='panel-title'>{moment(props.yogaClass.dateTime).format('DD MMM, YYYY:')}</h3>\n        <div /*className='inline'*/>\n          <h3 className='panel-title-bold'>{props.yogaClass.title}</h3><h3 className='panel-title'>with {props.yogaClass.instructor}</h3>\n        </div>\n      </div>\n      <div className='panel-footer'>\n        \n      {props.user && props.user.isAdmin ? \n        <div className='ClassListItem-action-panel'> \n          <Link\n            className='btn btn-xs btn-info'\n            to={{\n              pathname: '/details',\n              state: {\n                yogaClass: props.yogaClass,\n                user: props.user,\n                handleBookClass: props.handleBookClass,\n                handleShowProfile: props.handleShowProfile,\n                handleSignupOrLogin: props.handleSignupOrLogin\n              }\n            }}\n          >\n            DETAILS\n          </Link>\n          \n          <Link\n            className='btn btn-xs btn-warning'\n            to={{\n              pathname: '/edit',\n              state: {\n                yogaClass: props.yogaClass,\n                user: props.user,\n                handleShowProfile: props.handleShowProfile\n              }\n            }}\n            >\n            EDIT\n          </Link>\n          \n          <button\n            className=\"btn btn-xs btn-danger margin-left-10\"\n            onClick={() => props.handleDeleteClass(props.yogaClass._id)}\n          >\n            DELETE\n          </button>\n\n        </div> \n        : \n        <div>\n          <Link\n          className='btn btn-xs btn-info centered'\n          to={{\n            pathname: '/details',\n            state: {\n              yogaClass: props.yogaClass,\n              user: props.user,\n              handleBookClass: props.handleBookClass,\n              handleShowProfile: props.handleShowProfile,\n            }\n          }}\n        >\n          DETAILS\n        </Link>\n        </div> \n      }\n\n        \n      </div>\n    </div>\n  );\n}\nexport default ClassListItem;","import React from \"react\";\nimport \"./ClassListPage.css\";\nimport ClassListItem from \"../ClassListItem/ClassListItem\";\n\nfunction ClassListPage(props) {\n  return (\n    <>\n      <img className=\"book-class-img\" src=\"https://i.imgur.com/OKUSsxW.jpg\" />\n      <br></br><br></br>\n      <div className=\"ClassListPage-flex\">\n        {props.yogaClasses/*.sort((a,b) => b.dateTime - a.dateTime)*/.map(yogaClass => (\n          <ClassListItem \n            yogaClass={yogaClass} \n            key={yogaClass._id} \n            handleDeleteClass={props.handleDeleteClass}\n            handleBookClass={props.handleBookClass}\n            handleShowProfile={props.handleShowProfile}\n            user={props.user}\n            handleSignupOrLogin={props.handleSignupOrLogin}\n            />\n        ))} \n      </div>\n      <div className=\"margin-bottom\"></div>\n    </>\n  );\n}\nexport default ClassListPage;\n\n","import React, {Component} from 'react';\n\nclass AddClassPage extends Component {\n state = {\n   invalidForm: true,\n   formData: {\n     name: '',\n     breed: 'Mixed',\n     age: '0'\n   }\n };\n \n formRef = React.createRef();\n \n handleSubmit = e => {\n   e.preventDefault();\n   this.props.handleAddClass(this.state.formData);\n };\n \n handleChange = e => {\n   const formData = {...this.state.formData, [e.target.name]: e.target.value};\n   this.setState({\n     formData,\n     invalidForm: !this.formRef.current.checkValidity()\n   });\n };\n \n render() {\n   return (\n     <>\n       <h1>Add Class</h1>\n       <form ref={this.formRef} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n         <div className=\"form-group\">\n           <label>Class Name: </label>\n           <input\n             className=\"form-control\"\n             name=\"title\"\n             value={this.state.formData.title}\n             onChange={this.handleChange}\n             required\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Date and Time: </label>\n           <input\n             className=\"form-control\"\n             name=\"dateTime\"\n             value={this.state.formData.dateTime}\n             onChange={this.handleChange}\n             required\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Instructor: </label>\n           <input\n             className=\"form-control\"\n             name=\"instructor\"\n             value={this.state.formData.instructor}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Description: </label>\n           <textarea\n             className=\"form-control\"\n             name=\"description\"\n             value={this.state.formData.description}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Class Size: </label>\n           <input\n             className=\"form-control\"\n             name=\"yogaClassSize\"\n             value={this.state.formData.yogaClassSize}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Price: </label>\n           <input\n             className=\"form-control\"\n             name=\"price\"\n             value={this.state.formData.price}\n             onChange={this.handleChange}\n           />\n         </div>\n\n         <button\n           type=\"submit\"\n           className=\"btn\"\n           disabled={this.state.invalidForm}\n         >\n           ADD CLASS\n         </button>\n       </form>\n     </>\n   );\n }\n}\nexport default AddClassPage;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './ClassCard.css';\nvar moment = require('moment');\n\n\nfunction ClassCard(props) { \n\n  const yogaClass = props.yogaClass;\n  const user = props.user;\n\n  return (\n    <div className='panel panel-default'>\n      <div className=\"panel-heading\">\n        <h3 className='panel-title'>{yogaClass.title}</h3>\n      </div>\n      <div className='panel-body'>\n        <dl>\n\n          <div className='inline' >\n            <dt>Date:&nbsp;</dt>\n            <dd>{moment(yogaClass.dateTime).format('DD MMM, YYYY')}</dd>\n          </div>\n          \n          <div className='inline' >\n            <dt>Instructor:&nbsp;</dt>\n            <dd>{yogaClass.instructor}</dd>\n          </div>\n          \n          <div className='inline' >\n            <dt>Description:&nbsp;</dt>\n            <dd>{yogaClass.description}</dd>\n          </div>\n          \n          <div className='inline' >\n            <dt>Spots Remaining:&nbsp;</dt>\n            <dd>{yogaClass.yogaClassSize}</dd>\n          </div>\n          \n          <div className='inline' >\n            <dt>Price:&nbsp;</dt>\n            <dd>{yogaClass.price}</dd>\n          </div>\n\n        </dl>\n      </div>\n      <div className='panel-footer'>\n        <Link to='/'>RETURN TO LIST</Link>\n        \n        \n        {props.user.signups.includes(yogaClass._id) ?\n        <Link to='/profile'>ALREADY BOOKED</Link>\n        :\n        props.user ?\n        <button\n            onClick={() => props.handleBookClass(yogaClass._id)}\n          >\n            BOOK CLASS \n        </button> \n        :\n        <Link to='/login'>LOG IN TO BOOK</Link>\n        }\n\n\n\n      </div>\n      \n    </div>\n  );\n}\nexport default ClassCard;","import React from 'react';\nimport ClassCard from '../../components/ClassCard/ClassCard';\nimport './ClassDetailPage.css';\n\nfunction ClassDetailPage(props) {\n \n  // Refer to ClassListItem to see how yogaClass is being passed via the <Link>\n const yogaClass = props.location.state.yogaClass;\n return (\n   <>\n     <img className=\"book-class-img\" src=\"https://i.imgur.com/OKUSsxW.jpg\" />\n     <h1>Class Details</h1>\n     <ClassCard\n       key={yogaClass._id}\n       yogaClass={yogaClass}\n       user={props.user}\n       handleBookClass={props.handleBookClass}\n     />\n     <div className=\"margin-bottom\"></div>\n   </>\n );\n}\nexport default ClassDetailPage;","import React, {Component} from 'react';\n\nclass EditClassPage extends Component {\n state = {\n   invalidForm: false,\n   // Refer to ClassListItem to see how yogaClass is being passed via the <Link>\n   formData: this.props.location.state.yogaClass\n };\n formRef = React.createRef();\n handleSubmit = e => {\n   e.preventDefault();\n   this.props.handleUpdateClass(this.state.formData);\n };\n handleChange = e => {\n   const formData = {...this.state.formData, [e.target.name]: e.target.value};\n   this.setState({\n     formData,\n     invalidForm: !this.formRef.current.checkValidity()\n   });\n };\n render() {\n   return (\n     <>\n       <h1>Edit Class</h1>\n       <form ref={this.formRef} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n         <div className=\"form-group\">\n           <label>Class Name: </label>\n           <input\n             className=\"form-control\"\n             name=\"title\"\n             value={this.state.formData.title}\n             onChange={this.handleChange}\n             required\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Date and Time: </label>\n           <input\n             className=\"form-control\"\n             name=\"dateTime\"\n             value={this.state.formData.dateTime}\n             onChange={this.handleChange}\n             required\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Instructor: </label>\n           <input\n             className=\"form-control\"\n             name=\"instructor\"\n             value={this.state.formData.instructor}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Description: </label>\n           <textarea\n             className=\"form-control\"\n             name=\"description\"\n             value={this.state.formData.description}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Class Size: </label>\n           <input\n             className=\"form-control\"\n             name=\"yogaClassSize\"\n             value={this.state.formData.yogaClassSize}\n             onChange={this.handleChange}\n           />\n         </div>\n         <div className=\"form-group\">\n           <label>Price: </label>\n           <input\n             className=\"form-control\"\n             name=\"price\"\n             value={this.state.formData.price}\n             onChange={this.handleChange}\n           />\n         </div>\n\n         <button\n           type=\"submit\"\n           className=\"btn\"\n           disabled={this.state.invalidForm}\n         >\n           SAVE CHANGES\n         </button>\n       </form>\n     </>\n   );\n }\n}\nexport default EditClassPage;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    //headers: new Headers({'Content-Type': 'application/json'}),\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    },\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    //throw new Error('Email already taken!');\n  }) \n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin(); \n      // Successfully signed up - show main page\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"header-footer\">Sign Up</header>\n        <br></br>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n} \n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => { \n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  }; \n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <header className=\"header-footer\">Log In</header>\n        <br></br>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","  //going to be almost identical to ClassListPage \n  //should I make this a component? It's going to need to inherit props from above and pass them down\n\nimport React from \"react\";\nimport \"../ClassListPage/ClassListPage.css\";\nimport ClassListItem from \"../ClassListItem/ClassListItem.jsx\";\n\nfunction MyProfilePage(props) {\n  return (\n    <>\n      <img className=\"book-class-img\" src=\"https://i.imgur.com/GUdjg5Z.png\" />\n      <h1>My Classes (work in progress)</h1>\n      <div className=\"ClassListPage-flex\">\n        {props.yogaClasses/*.sort((a,b) => b.dateTime - a.dateTime)*/.map(yogaClass => (\n            <ClassListItem \n              yogaClass={yogaClass} \n              key={yogaClass._id} \n              handleShowProfile={props.handleShowProfile}\n              user={props.user}\n            />\n        ))} \n      </div>\n      <p>Look in props, user, signups...trying to only display classes that a user has signed up for...</p>\n      <div className=\"margin-bottom\"></div>\n    </>\n  );\n}\nexport default MyProfilePage;\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Route, NavLink} from 'react-router-dom';\n// The following imports all named exports attached to yogaClassAPI\nimport * as yogaClassAPI from './services/yoga-api';\nimport * as userAPI from './services/user-api';\nimport ClassListPage from './components/ClassListPage/ClassListPage';\nimport AddClassPage from './components/AddClassPage/AddClassPage';\nimport ClassDetailPage from './components/ClassDetailPage/ClassDetailPage';\nimport EditClassPage from './components/EditClassPage/EditClassPage';\nimport SignupPage from './pages/SignupPage/SignupPage.jsx';\nimport LoginPage from './pages/LoginPage/LoginPage.jsx';\nimport MyProfilePage from './components/MyProfilePage/MyProfilePage.jsx'\nimport userService from './utils/userService';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      yogaClasses: [],\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser()\n    };\n  }\n  \n  //Runs everytime after render() is called\n  async componentDidMount() {\n    const yogaClasses = await yogaClassAPI.getAll();\n    this.setState({yogaClasses});\n  }\n\n  handleAddClass = async newYogaClassData => {\n    const newYogaClass = await yogaClassAPI.create(newYogaClassData);\n    this.setState(state => ({\n      yogaClasses: [...state.yogaClasses, newYogaClass]\n    }),\n    // Using cb to wait for state to update before rerouting\n    () => this.props.history.push('/'));\n  }\n\n  handleUpdateClass = async updatedYogaClassData => {\n    const updatedClass = await yogaClassAPI.update(updatedYogaClassData);\n    // Using map to replace just the yogaClass that was updated\n    const newYogaClassesArray = this.state.yogaClasses.map(p => \n      p._id === updatedClass._id ? updatedClass : p\n    );\n    this.setState(\n      {yogaClasses: newYogaClassesArray},\n      // This cb function runs after state is updated\n      () => this.props.history.push('/')\n    );\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\n  handleDeleteClass= async id => {\n    await yogaClassAPI.deleteOne(id);\n    this.setState(state => ({\n      // Yay, filter returns a NEW array\n      yogaClasses: state.yogaClasses.filter(p => p._id !== id)\n    }), () => this.props.history.push('/'));\n  }\n\n  handleBookClass = async id => {\n    await userAPI.bookClass(this.state.user, id);\n  }\n\n  handleShowProfile = async id => {\n    await userAPI.showSelectedClasses(this.state.user, id);\n  }\n  \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <NavLink exact to='/'>Courtney's Virtual Yoga Classes </NavLink>\n\n          {this.state.user ?\n              <div>\n                <span className=\"inline\">Welcome, {this.state.user.name}\n                  &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                  <nav>\n                  <NavLink className=\"NavLink right\" exact to='/login' onClick={this.handleLogout}>LOG OUT?</NavLink>\n                </nav></span>\n              </div>\n              :\n              <div>\n                <nav>\n                  <NavLink className=\"NavLink btn\"to='/login'>LOG IN</NavLink>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  <NavLink className=\"btn\" to='/signup'>SIGN UP</NavLink>\n                </nav>\n              </div>\n          }\n          \n          {this.state.user && this.state.user.isAdmin ?\n            <div>\n              <nav>\n              <NavLink className=\"NavLink right\"  exact to='/'> \n                  Class List\n                </NavLink>\n                <NavLink className=\"NavLink\" exact to='/add'>\n                  Add Class\n                </NavLink>\n              </nav>\n            </div>\n            :\n            <div>\n              <nav>\n                <NavLink className=\"NavLink right\"  exact to='/'> \n                  Book a Class\n                </NavLink>\n                <NavLink className=\"NavLink right\" exact to='/profile'>\n                  My Profile\n                </NavLink>\n              </nav>\n            </div>\n          }\n        \n        </header>\n        \n        <main>\n          <Route \n            exact path='/' render={() => \n              <ClassListPage\n                yogaClasses={this.state.yogaClasses}\n                handleDeleteClass={this.handleDeleteClass}\n                handleLogout={this.handleLogout}\n                user={this.state.user} \n              />\n            } \n          />\n          <Route exact path='/add' render={() => \n            <AddClassPage\n                handleAddClass={this.handleAddClass}\n            />\n          } />\n          <Route exact path='/details' render={({location}) => \n            <ClassDetailPage \n                handleBookClass={this.handleBookClass}\n                user={this.state.user} \n                location={location}\n            />\n          } />\n          <Route exact path='/edit' render={({location}) => \n            <EditClassPage\n              handleUpdateClass={this.handleUpdateClass}\n              location={location}\n            />\n          } />\n          <Route exact path='/login' render={({history}) => \n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/signup' render={({history}) => \n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile' render={({history}) => \n            <MyProfilePage\n              history={history}\n              handleShowProfile={this.handleShowProfile}\n              yogaClasses={this.state.yogaClasses}\n              user={this.state.user} \n            />\n          } />\n          \n        </main>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route render={({history}) => <App history={history} />} />\n  </Router>, \n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}